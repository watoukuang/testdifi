worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout 65;

    # 错误页面配置
    error_page 500 502 503 504 /50x.html;

    server {
         listen  80;
         server_name  demochain.org;

         charset utf-8;
         location / {
            root /usr/local/web/demochain.org/dist;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
         }
    }

    server {
        listen  443 ssl;
        server_name  demochain.org;

         ssl_certificate    /usr/local/web/cert/demochain.org.pem;
         ssl_certificate_key  /usr/local/web/cert/demochain.org.key;
         ssl_session_timeout 5m;
         ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
         ssl_protocols TLSv1.2;
         ssl_prefer_server_ciphers on;

         charset utf-8;
         location / {
            root /usr/local/web/demochain.org/dist;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
         }
    }

    # --- HTTP 部分：监听 80，并强制跳转到 HTTPS ---
    server {
        listen 80;
        server_name watoukuang.com;

        # 自动重定向到 HTTPS
        return 301 https://$host$request_uri;
    }

    # --- HTTPS 部分：监听 443，反向代理到 localhost:3000 ---
    server {
        listen 443 ssl;
        server_name watoukuang.com;

        # SSL 配置
        ssl_certificate     /usr/local/web/cert/watoukuang.com.pem;
        ssl_certificate_key /usr/local/web/cert/watoukuang.com.key;

        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        charset utf-8;

        # 代理所有请求到本地前端服务
        location / {
            proxy_pass http://10.15.69.2:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # --- HTTP 部分：监听 80，并强制跳转到 HTTPS ---
    server {
        listen 80;
        server_name wstool.org;

        # 自动重定向到 HTTPS
        return 301 https://$host$request_uri;
    }

        # --- HTTPS 部分：监听 443，反向代理到 localhost:3000 ---
     server {
            listen 443 ssl;
            server_name wstool.org;

            # SSL 配置
            ssl_certificate     /usr/local/web/cert/wstool.org.pem;
            ssl_certificate_key /usr/local/web/cert/wstool.org.key;

            ssl_session_timeout 5m;
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_prefer_server_ciphers on;

            charset utf-8;

            # 代理所有请求到本地前端服务
            location / {
                proxy_pass http://10.15.69.2:3001;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }
        }

    # --- HTTP 部分：监听 80，并强制跳转到 HTTPS ---
    server {
        listen 80;
        server_name apitool.org;

        # 自动重定向到 HTTPS
        return 301 https://$host$request_uri;
    }

     # --- HTTPS 部分：监听 443，反向代理到 localhost:3000 ---
     server {
            listen 443 ssl;
            server_name apitool.org;

            # SSL 配置
            ssl_certificate     /usr/local/web/cert/apitool.org.pem;
            ssl_certificate_key /usr/local/web/cert/apitool.org.key;

            ssl_session_timeout 5m;
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_prefer_server_ciphers on;

            charset utf-8;

            # 代理所有请求到本地前端服务
            location / {
                proxy_pass http://10.15.69.2:3002;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }
        }

     # --- HTTP 部分：监听 80，并强制跳转到 HTTPS ---
     server {
            listen 80;
            server_name svghub.org;

            # 自动重定向到 HTTPS
            return 301 https://$host$request_uri;
        }

     # --- HTTPS 部分：监听 443，反向代理到 localhost:3000 ---
     server {
                listen 443 ssl;
                server_name svghub.org;

                # SSL 配置
                ssl_certificate     /usr/local/web/cert/svghub.org.pem;
                ssl_certificate_key /usr/local/web/cert/svghub.org.key;

                ssl_session_timeout 5m;
                ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
                ssl_protocols TLSv1.2 TLSv1.3;
                ssl_prefer_server_ciphers on;

                charset utf-8;

                # 代理所有请求到本地前端服务
                location / {
                    proxy_pass http://10.15.69.2:3003;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                }
            }
}
